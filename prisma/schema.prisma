generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model avis {
  id_avis     Int     @id @default(autoincrement())
  commentaire String  @db.VarChar(500)
  client      String  @db.VarChar(50)
  plateforme  String  @db.VarChar(50)
  date        String? @db.VarChar(50)
  afficher    Boolean
}

model categories {
  id_cat   Int     @id @default(autoincrement())
  titre    String  @db.VarChar(50)
  afficher Boolean
}

model experiences {
  id_exp         Int     @id @default(autoincrement())
  date_debut     String  @db.VarChar(50)
  date_fin       String  @db.VarChar(10)
  titre          String  @db.VarChar(150)
  description    String  @db.VarChar(10000)
  url_img        String  @db.VarChar(250)
  position_img   String  @db.VarChar(50)
  position       String  @db.VarChar(10)
  categorie      String  @db.VarChar(25)
  img_logo       String  @db.VarChar(250)
  nom_entreprise String  @db.VarChar(50)
  url_entreprise String  @db.VarChar(1000)
  type_emploi    String  @db.VarChar(50)
  poste_actuel   Int
  afficher       Boolean
}

model faq {
  id_faq   Int     @id @default(autoincrement())
  question String  @db.VarChar(250)
  reponse  String  @db.VarChar(1000)
  afficher Boolean
}

model photos_experiences {
  id_photo Int    @id @default(autoincrement())
  titre    String @db.VarChar(100)
  url      String @db.VarChar(1000)
  date     String @db.VarChar(50)
}

model utilisateurs {
  id_user  Int     @id @default(autoincrement())
  img      String  @db.VarChar(250)
  email    String? @db.VarChar(50)
  username String  @db.VarChar(50)
  password String  @db.VarChar(50)
  role     String  @db.VarChar(10)
}

model autre_categories {
  id_cat Int    @id @default(autoincrement())
  titre  String @db.VarChar(50)
}

model autre_tags {
  id_tag Int    @id @default(autoincrement())
  titre  String @db.VarChar(50)
}

model photos {
  id_photo       Int            @id @default(autoincrement())
  lien_high      String         @db.VarChar(500)
  lien_low       String         @db.VarChar(500)
  largeur        Int
  hauteur        Int
  tags           String         @db.VarChar(50)
  tags_recherche String         @db.VarChar(500)
  date_ajout     DateTime       @db.DateTime(0)
  afficher       Boolean
  id_album       Int?
  photos_albums  photos_albums? @relation(fields: [id_album], references: [id_album], onDelete: Cascade, map: "fk_foreign")

  @@index([id_album], map: "fk_foreign")
}

model photos_albums {
  id_album    Int      @id @default(autoincrement())
  titre       String   @db.VarChar(100)
  description String   @db.VarChar(1000)
  date        DateTime @db.Date
  photos      photos[]
}

model photos_tags {
  id_tag Int    @id @default(autoincrement())
  titre  String @db.VarChar(50)
}

model videos {
  id_vid                Int      @id @default(autoincrement())
  titre                 String   @db.VarChar(100)
  description           String   @db.VarChar(3500)
  tags                  String   @db.VarChar(50)
  lien                  String   @db.VarChar(500)
  date                  String   @db.VarChar(50)
  media_webm            String   @db.VarChar(100)
  media_mp4             String   @db.VarChar(100)
  duree                 String   @db.VarChar(25)
  afficher_competences  String   @db.VarChar(50)
  afficher              Boolean
  derniere_modification DateTime @db.DateTime(0)
}

model videos_tags {
  id_tag               Int     @id @default(autoincrement())
  titre                String  @db.VarChar(50)
  afficher_competences Boolean
}

model autre {
  id_autre    Int      @id @default(autoincrement())
  titre       String   @db.VarChar(100)
  description String   @db.VarChar(3500)
  lien        String   @db.VarChar(500)
  categorie   String   @db.VarChar(50)
  tags        String   @db.VarChar(50)
  date        DateTime @db.Date
  afficher    Boolean
}
